name: tests

on: [push, pull_request]

jobs:

  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

          # virtualenvs-path: ~/.venv
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      # install dependencies if cache does not exist
      - name: Check cache and install dependencies
        run: poetry install --no-interaction --no-root
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      # poetry run pre-commit run --all-files
      - name: Run linters
        run: |
            poetry run isort src/
            poetry run black --check src/
            poetry run pre-commit run --all-files


  test:
# XXX    needs: linting
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest", "macos-latest" ]
        python-version: [ "3.7", "3.8", "3.9" ]
        #django-version: [ "django>=2.2,<3", "django>=3.1,<4" ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      - name: Run tests
        run: tox
      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
